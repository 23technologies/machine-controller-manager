// This file was automatically generated by informer-gen

package v1alpha1

import (
	node_v1alpha1 "github.com/gardener/node-controller-manager/pkg/apis/node/v1alpha1"
	clientset "github.com/gardener/node-controller-manager/pkg/client/clientset"
	internalinterfaces "github.com/gardener/node-controller-manager/pkg/client/informers/externalversions/internalinterfaces"
	v1alpha1 "github.com/gardener/node-controller-manager/pkg/client/listers/node/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	watch "k8s.io/apimachinery/pkg/watch"
	cache "k8s.io/client-go/tools/cache"
	time "time"
)

// InstanceSetInformer provides access to a shared informer and lister for
// InstanceSets.
type InstanceSetInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() v1alpha1.InstanceSetLister
}

type instanceSetInformer struct {
	factory internalinterfaces.SharedInformerFactory
}

// NewInstanceSetInformer constructs a new informer for InstanceSet type.
// Always prefer using an informer factory to get a shared informer instead of getting an independent
// one. This reduces memory footprint and number of connections to the server.
func NewInstanceSetInformer(client clientset.Interface, resyncPeriod time.Duration, indexers cache.Indexers) cache.SharedIndexInformer {
	return cache.NewSharedIndexInformer(
		&cache.ListWatch{
			ListFunc: func(options v1.ListOptions) (runtime.Object, error) {
				return client.NodeV1alpha1().InstanceSets().List(options)
			},
			WatchFunc: func(options v1.ListOptions) (watch.Interface, error) {
				return client.NodeV1alpha1().InstanceSets().Watch(options)
			},
		},
		&node_v1alpha1.InstanceSet{},
		resyncPeriod,
		indexers,
	)
}

func defaultInstanceSetInformer(client clientset.Interface, resyncPeriod time.Duration) cache.SharedIndexInformer {
	return NewInstanceSetInformer(client, resyncPeriod, cache.Indexers{cache.NamespaceIndex: cache.MetaNamespaceIndexFunc})
}

func (f *instanceSetInformer) Informer() cache.SharedIndexInformer {
	return f.factory.InformerFor(&node_v1alpha1.InstanceSet{}, defaultInstanceSetInformer)
}

func (f *instanceSetInformer) Lister() v1alpha1.InstanceSetLister {
	return v1alpha1.NewInstanceSetLister(f.Informer().GetIndexer())
}
